// Code generated by protoc-gen-go.
// source: sielink.proto
// DO NOT EDIT!

/*
Package sielink is a generated protocol buffer package.

It is generated from these files:
	sielink.proto

It has these top-level messages:
	Message
	Payload
	LossCounter
	Topology
	Path
	Subscription
	Alert
*/
package sielink

import proto "google.golang.org/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_DataMessage     MessageType = 0
	MessageType_TopologyMessage MessageType = 1
	MessageType_AlertMessage    MessageType = 2
	MessageType_Heartbeat       MessageType = 3
	MessageType_Shutdown        MessageType = 4
	MessageType_Finished        MessageType = 5
)

var MessageType_name = map[int32]string{
	0: "DataMessage",
	1: "TopologyMessage",
	2: "AlertMessage",
	3: "Heartbeat",
	4: "Shutdown",
	5: "Finished",
}
var MessageType_value = map[string]int32{
	"DataMessage":     0,
	"TopologyMessage": 1,
	"AlertMessage":    2,
	"Heartbeat":       3,
	"Shutdown":        4,
	"Finished":        5,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PayloadType int32

const (
	PayloadType_NmsgContainer    PayloadType = 1
	PayloadType_LogRecord        PayloadType = 2
	PayloadType_AccountingRecord PayloadType = 3
)

var PayloadType_name = map[int32]string{
	1: "NmsgContainer",
	2: "LogRecord",
	3: "AccountingRecord",
}
var PayloadType_value = map[string]int32{
	"NmsgContainer":    1,
	"LogRecord":        2,
	"AccountingRecord": 3,
}

func (x PayloadType) Enum() *PayloadType {
	p := new(PayloadType)
	*p = x
	return p
}
func (x PayloadType) String() string {
	return proto.EnumName(PayloadType_name, int32(x))
}
func (x *PayloadType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PayloadType_value, data, "PayloadType")
	if err != nil {
		return err
	}
	*x = PayloadType(value)
	return nil
}
func (PayloadType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CompressionType int32

const (
	CompressionType_None    CompressionType = 0
	CompressionType_Gzip    CompressionType = 1
	CompressionType_Deflate CompressionType = 2
	CompressionType_LZ4     CompressionType = 3
)

var CompressionType_name = map[int32]string{
	0: "None",
	1: "Gzip",
	2: "Deflate",
	3: "LZ4",
}
var CompressionType_value = map[string]int32{
	"None":    0,
	"Gzip":    1,
	"Deflate": 2,
	"LZ4":     3,
}

func (x CompressionType) Enum() *CompressionType {
	p := new(CompressionType)
	*p = x
	return p
}
func (x CompressionType) String() string {
	return proto.EnumName(CompressionType_name, int32(x))
}
func (x *CompressionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CompressionType_value, data, "CompressionType")
	if err != nil {
		return err
	}
	*x = CompressionType(value)
	return nil
}
func (CompressionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type AlertLevel int32

const (
	AlertLevel_Informational    AlertLevel = 0
	AlertLevel_Warning          AlertLevel = 1
	AlertLevel_RecoverableError AlertLevel = 2
	AlertLevel_FatalError       AlertLevel = 3
)

var AlertLevel_name = map[int32]string{
	0: "Informational",
	1: "Warning",
	2: "RecoverableError",
	3: "FatalError",
}
var AlertLevel_value = map[string]int32{
	"Informational":    0,
	"Warning":          1,
	"RecoverableError": 2,
	"FatalError":       3,
}

func (x AlertLevel) Enum() *AlertLevel {
	p := new(AlertLevel)
	*p = x
	return p
}
func (x AlertLevel) String() string {
	return proto.EnumName(AlertLevel_name, int32(x))
}
func (x *AlertLevel) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AlertLevel_value, data, "AlertLevel")
	if err != nil {
		return err
	}
	*x = AlertLevel(value)
	return nil
}
func (AlertLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Message struct {
	ProtocolVersion  []uint32     `protobuf:"varint,1,rep,name=protocolVersion" json:"protocolVersion,omitempty"`
	MessageType      *MessageType `protobuf:"varint,2,req,name=messageType,enum=sielink.MessageType" json:"messageType,omitempty"`
	Payload          *Payload     `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	Topology         *Topology    `protobuf:"bytes,4,opt,name=topology" json:"topology,omitempty"`
	Heartbeat        *uint32      `protobuf:"varint,5,opt,name=heartbeat" json:"heartbeat,omitempty"`
	Alert            *Alert       `protobuf:"bytes,6,opt,name=alert" json:"alert,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetProtocolVersion() []uint32 {
	if m != nil {
		return m.ProtocolVersion
	}
	return nil
}

func (m *Message) GetMessageType() MessageType {
	if m != nil && m.MessageType != nil {
		return *m.MessageType
	}
	return MessageType_DataMessage
}

func (m *Message) GetPayload() *Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetTopology() *Topology {
	if m != nil {
		return m.Topology
	}
	return nil
}

func (m *Message) GetHeartbeat() uint32 {
	if m != nil && m.Heartbeat != nil {
		return *m.Heartbeat
	}
	return 0
}

func (m *Message) GetAlert() *Alert {
	if m != nil {
		return m.Alert
	}
	return nil
}

type Payload struct {
	Channel           *uint32          `protobuf:"varint,1,req,name=channel" json:"channel,omitempty"`
	PayloadType       *PayloadType     `protobuf:"varint,2,opt,name=payloadType,enum=sielink.PayloadType" json:"payloadType,omitempty"`
	CompressionType   *CompressionType `protobuf:"varint,3,opt,name=compressionType,enum=sielink.CompressionType" json:"compressionType,omitempty"`
	Data              []byte           `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	LinkLoss          *LossCounter     `protobuf:"bytes,5,opt,name=linkLoss" json:"linkLoss,omitempty"`
	PathLoss          *LossCounter     `protobuf:"bytes,6,opt,name=pathLoss" json:"pathLoss,omitempty"`
	SourceSite        *uint32          `protobuf:"varint,7,opt,name=sourceSite" json:"sourceSite,omitempty"`
	SourceContributor *uint32          `protobuf:"varint,8,opt,name=sourceContributor" json:"sourceContributor,omitempty"`
	XXX_unrecognized  []byte           `json:"-"`
}

func (m *Payload) Reset()                    { *m = Payload{} }
func (m *Payload) String() string            { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()               {}
func (*Payload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Payload) GetChannel() uint32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return 0
}

func (m *Payload) GetPayloadType() PayloadType {
	if m != nil && m.PayloadType != nil {
		return *m.PayloadType
	}
	return PayloadType_NmsgContainer
}

func (m *Payload) GetCompressionType() CompressionType {
	if m != nil && m.CompressionType != nil {
		return *m.CompressionType
	}
	return CompressionType_None
}

func (m *Payload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Payload) GetLinkLoss() *LossCounter {
	if m != nil {
		return m.LinkLoss
	}
	return nil
}

func (m *Payload) GetPathLoss() *LossCounter {
	if m != nil {
		return m.PathLoss
	}
	return nil
}

func (m *Payload) GetSourceSite() uint32 {
	if m != nil && m.SourceSite != nil {
		return *m.SourceSite
	}
	return 0
}

func (m *Payload) GetSourceContributor() uint32 {
	if m != nil && m.SourceContributor != nil {
		return *m.SourceContributor
	}
	return 0
}

type LossCounter struct {
	Bytes            *uint64 `protobuf:"varint,1,opt,name=bytes" json:"bytes,omitempty"`
	Payloads         *uint64 `protobuf:"varint,2,opt,name=payloads" json:"payloads,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LossCounter) Reset()                    { *m = LossCounter{} }
func (m *LossCounter) String() string            { return proto.CompactTextString(m) }
func (*LossCounter) ProtoMessage()               {}
func (*LossCounter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LossCounter) GetBytes() uint64 {
	if m != nil && m.Bytes != nil {
		return *m.Bytes
	}
	return 0
}

func (m *LossCounter) GetPayloads() uint64 {
	if m != nil && m.Payloads != nil {
		return *m.Payloads
	}
	return 0
}

type Topology struct {
	Path             []*Path         `protobuf:"bytes,1,rep,name=path" json:"path,omitempty"`
	Subscription     []*Subscription `protobuf:"bytes,2,rep,name=subscription" json:"subscription,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Topology) Reset()                    { *m = Topology{} }
func (m *Topology) String() string            { return proto.CompactTextString(m) }
func (*Topology) ProtoMessage()               {}
func (*Topology) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Topology) GetPath() []*Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *Topology) GetSubscription() []*Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

type Path struct {
	Metric           *uint64  `protobuf:"varint,1,req,name=metric" json:"metric,omitempty"`
	Site             []uint32 `protobuf:"varint,2,rep,name=site" json:"site,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Path) Reset()                    { *m = Path{} }
func (m *Path) String() string            { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()               {}
func (*Path) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Path) GetMetric() uint64 {
	if m != nil && m.Metric != nil {
		return *m.Metric
	}
	return 0
}

func (m *Path) GetSite() []uint32 {
	if m != nil {
		return m.Site
	}
	return nil
}

type Subscription struct {
	SourceSite       *uint32  `protobuf:"varint,1,opt,name=sourceSite" json:"sourceSite,omitempty"`
	Channel          []uint32 `protobuf:"varint,2,rep,name=channel" json:"channel,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Subscription) Reset()                    { *m = Subscription{} }
func (m *Subscription) String() string            { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()               {}
func (*Subscription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Subscription) GetSourceSite() uint32 {
	if m != nil && m.SourceSite != nil {
		return *m.SourceSite
	}
	return 0
}

func (m *Subscription) GetChannel() []uint32 {
	if m != nil {
		return m.Channel
	}
	return nil
}

type Alert struct {
	Level            *AlertLevel `protobuf:"varint,1,req,name=level,enum=sielink.AlertLevel" json:"level,omitempty"`
	Message          *string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Code             *uint32     `protobuf:"varint,3,opt,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Alert) Reset()                    { *m = Alert{} }
func (m *Alert) String() string            { return proto.CompactTextString(m) }
func (*Alert) ProtoMessage()               {}
func (*Alert) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Alert) GetLevel() AlertLevel {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return AlertLevel_Informational
}

func (m *Alert) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *Alert) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*Message)(nil), "sielink.Message")
	proto.RegisterType((*Payload)(nil), "sielink.Payload")
	proto.RegisterType((*LossCounter)(nil), "sielink.LossCounter")
	proto.RegisterType((*Topology)(nil), "sielink.Topology")
	proto.RegisterType((*Path)(nil), "sielink.Path")
	proto.RegisterType((*Subscription)(nil), "sielink.Subscription")
	proto.RegisterType((*Alert)(nil), "sielink.Alert")
	proto.RegisterEnum("sielink.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("sielink.PayloadType", PayloadType_name, PayloadType_value)
	proto.RegisterEnum("sielink.CompressionType", CompressionType_name, CompressionType_value)
	proto.RegisterEnum("sielink.AlertLevel", AlertLevel_name, AlertLevel_value)
}

func init() { proto.RegisterFile("sielink.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 697 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x53, 0x5d, 0x6f, 0xd3, 0x3c,
	0x14, 0x7e, 0x9b, 0xa4, 0x4b, 0x77, 0xd2, 0x8f, 0xcc, 0xdb, 0x8b, 0x22, 0x84, 0xd0, 0x88, 0xb8,
	0x28, 0x15, 0x4c, 0xa8, 0x42, 0x48, 0x88, 0x0b, 0x34, 0xf6, 0xc1, 0x90, 0xba, 0x69, 0xf2, 0x26,
	0x90, 0xb8, 0xc2, 0x4d, 0xbd, 0x26, 0x22, 0x8d, 0x23, 0xdb, 0x1d, 0x2a, 0x3f, 0x81, 0xff, 0xc9,
	0xff, 0xc0, 0x76, 0x3e, 0x9a, 0x76, 0x12, 0x77, 0x3e, 0xe7, 0x3c, 0xe7, 0xf1, 0xf1, 0xe3, 0xe7,
	0x40, 0x4f, 0x24, 0x34, 0x4d, 0xb2, 0x1f, 0x47, 0x39, 0x67, 0x92, 0x21, 0xb7, 0x0c, 0xc3, 0xdf,
	0x16, 0xb8, 0x97, 0x54, 0x08, 0x32, 0xa7, 0x68, 0x08, 0x03, 0x53, 0x8d, 0x58, 0xfa, 0x85, 0x72,
	0x91, 0xb0, 0x2c, 0x68, 0x1d, 0xda, 0xc3, 0x1e, 0xde, 0x4e, 0xa3, 0xb7, 0xe0, 0x2d, 0x8a, 0xa6,
	0xdb, 0x55, 0x4e, 0x03, 0xeb, 0xd0, 0x1a, 0xf6, 0xc7, 0x07, 0x47, 0xd5, 0x1d, 0x97, 0xeb, 0x1a,
	0x6e, 0x02, 0xd1, 0x08, 0xdc, 0x9c, 0xac, 0x52, 0x46, 0x66, 0x81, 0x7d, 0xd8, 0x1a, 0x7a, 0x63,
	0xbf, 0xee, 0xb9, 0x2e, 0xf2, 0xb8, 0x02, 0xa0, 0x57, 0xd0, 0x91, 0x2c, 0x67, 0x29, 0x9b, 0xaf,
	0x02, 0xc7, 0x80, 0xf7, 0x6a, 0xf0, 0x6d, 0x59, 0xc0, 0x35, 0x04, 0x3d, 0x81, 0xdd, 0x98, 0x12,
	0x2e, 0xa7, 0x94, 0xc8, 0xa0, 0xad, 0xf0, 0x3d, 0xbc, 0x4e, 0xa0, 0xe7, 0xd0, 0x26, 0x29, 0xe5,
	0x32, 0xd8, 0x31, 0x4c, 0xfd, 0x9a, 0xe9, 0x58, 0x67, 0x71, 0x51, 0x0c, 0xff, 0x28, 0x31, 0xca,
	0x39, 0x50, 0x00, 0x6e, 0x14, 0x93, 0x2c, 0xa3, 0xa9, 0x12, 0xc1, 0x52, 0x6c, 0x55, 0xa8, 0x1f,
	0x5f, 0xce, 0x58, 0x3e, 0xbe, 0xb5, 0xf1, 0xf8, 0xeb, 0x75, 0x0d, 0x37, 0x81, 0xe8, 0x23, 0x0c,
	0x22, 0xb6, 0xc8, 0xb9, 0xd2, 0x43, 0x69, 0x68, 0x7a, 0x6d, 0xd3, 0x1b, 0xd4, 0xbd, 0x27, 0x9b,
	0x75, 0xbc, 0xdd, 0x80, 0x10, 0x38, 0x33, 0x22, 0x89, 0x11, 0xa4, 0x8b, 0xcd, 0x19, 0xbd, 0x86,
	0x8e, 0x6e, 0x9e, 0x30, 0x21, 0xcc, 0xc3, 0xbd, 0xc6, 0x30, 0x3a, 0x79, 0xc2, 0x96, 0x99, 0xa4,
	0x1c, 0xd7, 0x28, 0xdd, 0x91, 0x13, 0x19, 0x9b, 0x8e, 0x9d, 0x7f, 0x75, 0x54, 0x28, 0xf4, 0x14,
	0x40, 0xb0, 0x25, 0x8f, 0xe8, 0x4d, 0x22, 0x69, 0xe0, 0x1a, 0x79, 0x1b, 0x19, 0xf4, 0x12, 0xf6,
	0x8a, 0xe8, 0x84, 0x65, 0x92, 0x27, 0xd3, 0xa5, 0x64, 0x3c, 0xe8, 0x18, 0xd8, 0xc3, 0x42, 0xf8,
	0x01, 0xbc, 0xc6, 0x35, 0xe8, 0x00, 0xda, 0xd3, 0x95, 0xa4, 0x42, 0x09, 0xdd, 0x1a, 0x3a, 0xb8,
	0x08, 0xd0, 0x63, 0x3d, 0xa4, 0x51, 0x4f, 0x18, 0x8d, 0x1d, 0x5c, 0xc7, 0x61, 0x0c, 0x9d, 0xca,
	0x02, 0xe8, 0x19, 0x38, 0x7a, 0x4c, 0x63, 0x55, 0x6f, 0xdc, 0x6b, 0xfc, 0x83, 0x8c, 0xb1, 0x29,
	0xa1, 0x77, 0xd0, 0x15, 0xcb, 0xa9, 0x88, 0x78, 0x92, 0x4b, 0xed, 0x6a, 0xcb, 0x40, 0xff, 0xaf,
	0xa1, 0x37, 0x8d, 0x22, 0xde, 0x80, 0x86, 0x63, 0x70, 0x34, 0x11, 0x7a, 0x04, 0x3b, 0x0b, 0xaa,
	0x1e, 0x10, 0x19, 0x37, 0x38, 0xb8, 0x8c, 0xf4, 0x87, 0x08, 0x2d, 0x89, 0x65, 0x16, 0xc5, 0x9c,
	0xc3, 0x0b, 0xe8, 0x36, 0x19, 0xb7, 0xc4, 0x6b, 0x3d, 0x10, 0xaf, 0x61, 0xb5, 0x82, 0xa6, 0x0a,
	0xc3, 0xef, 0xd0, 0x36, 0x06, 0x45, 0x2f, 0xa0, 0x9d, 0xd2, 0xfb, 0xd2, 0x8b, 0xfd, 0xf1, 0xfe,
	0xa6, 0x7f, 0x27, 0xba, 0x84, 0x0b, 0x84, 0x66, 0x2b, 0x57, 0xce, 0xc8, 0xb6, 0x8b, 0xab, 0x50,
	0xcf, 0x1a, 0xb1, 0x59, 0xe1, 0x3a, 0x35, 0xab, 0x3e, 0x8f, 0x72, 0xf0, 0x1a, 0xdb, 0x8a, 0x06,
	0xe0, 0x9d, 0x2a, 0x4f, 0x95, 0x29, 0xff, 0x3f, 0xb4, 0x0f, 0x83, 0x4a, 0xe9, 0x2a, 0xd9, 0x42,
	0x3e, 0x74, 0xcd, 0xbd, 0x55, 0xc6, 0x42, 0x3d, 0xd8, 0xbd, 0xa8, 0x96, 0xcd, 0xb7, 0x51, 0x17,
	0x3a, 0x37, 0xf1, 0x52, 0xce, 0xd8, 0xcf, 0xcc, 0x77, 0x74, 0x74, 0x9e, 0x64, 0x89, 0x88, 0xe9,
	0xcc, 0x6f, 0x8f, 0xce, 0xc0, 0x6b, 0xac, 0x08, 0xda, 0x83, 0xde, 0xd5, 0x42, 0xcc, 0xb5, 0x3d,
	0x48, 0x92, 0x51, 0xae, 0xe8, 0x15, 0xd9, 0x84, 0xcd, 0x31, 0x8d, 0x18, 0x9f, 0x29, 0xee, 0x03,
	0xf0, 0x8f, 0xa3, 0x48, 0x7b, 0x25, 0xc9, 0xaa, 0xac, 0x3d, 0x7a, 0x0f, 0x83, 0xad, 0x6d, 0x41,
	0x1d, 0x70, 0xae, 0x58, 0xa6, 0xa7, 0x56, 0xa7, 0x4f, 0xbf, 0x92, 0x5c, 0x71, 0x79, 0xe0, 0x9e,
	0xd2, 0xbb, 0x94, 0x48, 0x3d, 0xa5, 0x0b, 0xf6, 0xe4, 0xdb, 0x1b, 0xd5, 0x8c, 0x01, 0xd6, 0xc2,
	0xe9, 0x11, 0x3e, 0x67, 0x77, 0x8c, 0x2f, 0x88, 0xfe, 0x2e, 0x92, 0x2a, 0x02, 0xd5, 0xf6, 0x95,
	0xf0, 0x4c, 0x5d, 0xa8, 0x38, 0xd4, 0x00, 0xfa, 0xda, 0x7b, 0xca, 0xc9, 0x34, 0xa5, 0x67, 0x9c,
	0x33, 0xae, 0xc8, 0xfa, 0x00, 0xe7, 0x4a, 0xaa, 0xb4, 0x88, 0xed, 0xbf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x86, 0x25, 0x97, 0x29, 0x62, 0x05, 0x00, 0x00,
}
